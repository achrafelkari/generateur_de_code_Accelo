interface IO:
var MOTOR : boolean
var SB : boolean
in event master_start
in event master_stop
in event sb_start
in event sb_stop

16
55
org.yakindu.sct.model.sgraph.impl.StatechartImpl@b4bc72 (specification: interface IO:
var MOTOR : boolean
var SB : boolean
in event master_start
in event master_stop
in event sb_start
in event sb_stop
) (namespace: null, name: default, documentation: null)org.yakindu.sct.model.sgraph.impl.StatechartImpl@b4bc72 (specification: interface IO:
var MOTOR : boolean
var SB : boolean
in event master_start
in event master_stop
in event sb_start
in event sb_stop
) (namespace: null, name: default, documentation: null)org.yakindu.sct.model.sgraph.impl.StatechartImpl@b4bc72 (specification: interface IO:
var MOTOR : boolean
var SB : boolean
in event master_start
in event master_stop
in event sb_start
in event sb_stop
) (namespace: null, name: default, documentation: null)
      Boolean :  MOTOR 
      Boolean :  boolean
var SB 
'substring operation'.substring(11, 19)


----------------------------STATE TEST --------------------------


	STATE1
	STATE2
	STATE3


------------------------------- Target Entry Test ---------------------------


	STATE1


--------------------------------Test Specification of state -----------------


	out(MOTOR,false
entry/
IO.SB, false,-1);
	out(MOTOR,true
entry/
IO.SB,false,-1);
	out(MOTOR,false
entry/
IO.SB,true,-1);
--------------------------------------------------TEST DE 3 ETAT -----------------------------------------------


 // generated by acceleo 

  /** Les entree sortie : master_start**/ 
		boolean master_start = false;
		boolean ev_master_start=false;
		boolean prior_master_start = false;
		
		PROGMEM const char s_master_start[] = "master_start";
	
 // generated by acceleo 

  /** Les entree sortie : sb_startmaster_stop**/ 
		boolean sb_start = false;
		boolean ev_sb_start=false;
		boolean prior_sb_start = false;
		
		PROGMEM const char s_sb_start[] = "sb_start";
	
  /** Les entree sortie : sb_startmaster_stop**/ 
		boolean master_stop = false;
		boolean ev_master_stop=false;
		boolean prior_master_stop = false;
		
		PROGMEM const char s_master_stop[] = "master_stop";
	
 // generated by acceleo 

  /** Les entree sortie : sb_stop**/ 
		boolean sb_stop = false;
		boolean ev_sb_stop=false;
		boolean prior_sb_stop = false;
		
		PROGMEM const char s_sb_stop[] = "sb_stop";
	

 {
----------------------------------------------------------

 MOTOR : 
 SB : boolean


   
   
       #define MOTOR 8// l'entree a change !! 
	
   
   
       #define SB 8// l'entree a change !! 
	
   
   
       #define  8// l'entree a change !! 
	


